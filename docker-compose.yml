version: "3"

services:
  reverse_proxy:
    image: nginx:latest
    ports:
      - "80:80"
    networks:
      - front-tier
      - back-tier
    volumes:
      - ./sites-enabled:/etc/nginx/conf.d
        #    mem_limit: 512m
        #    mem_reservation: 128M
        #    cpus: 0.5


  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'smh  '
      # You can use whatever password you like
      MYSQL_PASSWORD: 'smhpass'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'rootpass'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql
        
  backend:
          #   image: node:18
    build: 
      context: .
      dockerfile: ./backend.Dockerfile
      #    volumes:
      #      - db-data:/etc/data
    networks:
      - back-tier

        #volumes:
        #  db-data:
        #    driver: flocker
        #    driver_opts:
        #      size: "10GiB"

# Names our volume
volumes:
  my-db:


networks:
  # The presence of these objects is sufficient to define them
  front-tier: {}
  back-tier: {}
